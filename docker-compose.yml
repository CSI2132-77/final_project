services:
  db:
    image: postgres:latest
    container_name: hotel-db
    restart: always
    env_file:
      - ./.env  # Load environment variables from the .env file
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build: ./backend
    container_name: hotel-backend
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
    env_file:
      - ./.env  # Ensure backend also loads its own env file
    volumes:
      - ./backend:/app
      - ./.env:/app/.env  # Mount the .env file to the backend container
    command: ["uvicorn", "main:app", "--host", "0.0.0.0", "--port", "8000", "--reload"]

  frontend:
    build: ./frontend
    container_name: hotel-frontend
    ports:
      - "3000:3000"
    depends_on:
      - backend
    volumes:
      - ./frontend:/app
    command: ["npm", "run", "dev"]

volumes:
  postgres_data:
